{"version":3,"sources":["images/logo.svg","images/edit.svg","images/plus.svg","images/trash.svg","images/close.svg","components/Header.js","utils/API.js","utils/constants.js","components/Card.js","components/Main.js","components/Footer.js","components/ButtonClose.js","components/PopupWithForm.js","components/PopupWithImage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","alt","src","logo","api","baseUrl","authorization","this","_baseUrl","_authorization","url","params","fetch","then","res","ok","json","Promise","reject","status","_fetch","method","headers","formValues","body","JSON","stringify","name","about","avatar","title","link","cardId","Card","props","card","onClick","onCardClick","type","trash","onDeleteCardClick","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","userId","setUserId","cards","setCards","useEffect","all","getInitialUserInfo","getInitialCards","_id","catch","err","console","log","onEditAvatar","onKeyDown","onEditProfile","edit","onAddCard","plus","map","key","Footer","ButtonClose","closeHandler","close","PopupWithForm","isOpen","onClose","noValidate","children","evt","preventDefault","submitName","PopupWithImage","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","closeAllPopups","handleEsc","window","addEventListener","removeEventListener","id","placeholder","required","maxLength","pattern","minLength","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a33b7a73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9d0e3a93.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.a41c84ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.3742cf7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.9c3b03ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.c2d0901f.svg\";","import React from 'react';\r\nimport logo from \"../images/logo.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img alt=\"Логотип «Mesto Russia»\" className=\"header__logo\" src={logo}/>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import {\r\n  authorization,\r\n  baseUrl,\r\n} from './constants.js';\r\n\r\nclass API {\r\n  constructor({baseUrl, authorization}) {\r\n    this._baseUrl = baseUrl;\r\n    this._authorization = authorization;\r\n  }\r\n\r\n  _fetch(url, params) {\r\n    return fetch(this._baseUrl + url, params)\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ну вот, все пропало (Ошибка: ${res.status})`);\r\n      })\r\n  }\r\n\r\n  getInitialUserInfo() {\r\n    return this._fetch('/users/me', {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    });\r\n  }\r\n\r\n  editUserInfo(formValues) {\r\n    return this._fetch('/users/me', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: formValues.name,\r\n        about: formValues.about\r\n      })\r\n    });\r\n  }\r\n\r\n  editUserAvatar(formValues) {\r\n    return this._fetch('/users/me/avatar', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: formValues.avatar\r\n      })\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return this._fetch('/cards', {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    });\r\n  }\r\n\r\n  postUserCard(formValues) {\r\n    return this._fetch('/cards', {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: formValues.title,\r\n        link: formValues.src\r\n      })\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return this._fetch('/cards/' + cardId, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    });\r\n  }\r\n\r\n  putLike(cardId) {\r\n    return this._fetch('/cards/likes/' + cardId, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteLike(cardId) {\r\n    return this._fetch('/cards/likes/' + cardId, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._authorization\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new API({baseUrl, authorization});\r\n\r\nexport default api;\r\n\r\n","export const baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-12';\r\nexport const authorization = '2ecad59e-1d15-4621-aac6-769c45c3d932';\r\n","import React from \"react\";\r\nimport trash from \"../images/trash.svg\";\r\n\r\nfunction Card(props) {\r\n  const card = props.card;\r\n\r\n  const handleClick = () => {\r\n    props.onCardClick(card);\r\n  };\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <img src={card.link}\r\n           alt={card.name}\r\n           className=\"card__image\"\r\n           onClick={handleClick}\r\n      />\r\n\r\n      <button className=\"button card__button-delete {/*card__button-delete_invisible*/}\" type=\"submit\" >\r\n        <img alt=\"Удалить\"\r\n             className=\"card__button-delete-vector\"\r\n             src={trash}\r\n             onClick={props.onDeleteCardClick} />\r\n      </button>\r\n      <div className=\"card__description\">\r\n        <h2 className=\"card__name\">{card.name}</h2>\r\n        <div className=\"card__likes-container\">\r\n          <button className=\"button card__button-like\" type=\"submit\"/>\r\n          <p className=\"card__count-likes\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport api from '../utils/API';\r\nimport edit from \"../images/edit.svg\";\r\nimport plus from \"../images/plus.svg\";\r\nimport Card from './Card';\r\n\r\n\r\nfunction Main(props) {\r\n  const [userName, setUserName] = React.useState('');\r\n  const [userDescription, setUserDescription] = React.useState('');\r\n  const [userAvatar, setUserAvatar] = React.useState('');\r\n  const [userId, setUserId] = React.useState('');\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getInitialUserInfo(), api.getInitialCards()])\r\n      .then(([{name, about, avatar, _id}, cards]) => {\r\n        setUserName(name);\r\n        setUserDescription(about);\r\n        setUserAvatar(avatar);\r\n        setUserId(_id);\r\n\r\n        setCards(cards);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__position\">\r\n\r\n          <button\r\n            className=\"button profile__avatar-edit\"\r\n            type=\"button\"\r\n            onClick={props.onEditAvatar}\r\n            onKeyDown={props.onEditAvatar}>\r\n            <img\r\n              alt=\"Аватар\"\r\n              src={userAvatar}\r\n              className=\"profile__avatar-image\"/>\r\n          </button>\r\n\r\n          <div className=\"profile__user-info\">\r\n            <div className=\"profile__name-edit-position\">\r\n              <h1 className=\"profile__user-info-name\">{userName}</h1>\r\n              <button\r\n                className=\"button profile__button-edit\"\r\n                type=\"button\"\r\n                onClick={props.onEditProfile}\r\n                onKeyDown={props.onEditProfile}\r\n              >\r\n                <img\r\n                  alt=\"Редактировать профиль\"\r\n                  className=\"profile__button-edit-vector\"\r\n                  src={edit}/>\r\n              </button>\r\n            </div>\r\n            <p className=\"profile__user-info-about\">{userDescription}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"button profile__button-add\"\r\n          type=\"button\"\r\n          onClick={props.onAddCard}\r\n          onKeyDown={props.onAddCard}\r\n        >\r\n          <img\r\n            alt=\"Добавить карточку\"\r\n            className=\"profile__button-add-vector\"\r\n            src={plus}\r\n          />\r\n        </button>\r\n      </section>\r\n\r\n      <ul className=\"card-container\">\r\n        {cards.map(card => {\r\n          return <Card\r\n            key={card._id}\r\n            card={card}\r\n            userId={userId}\r\n            onCardClick={props.onCardClick}\r\n            onDeleteCardClick={props.onDeleteCardClick}\r\n          />\r\n        })}\r\n      </ul>\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__сopyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport close from \"../images/close.svg\";\r\n\r\nfunction ButtonClose(props) {\r\n  return (\r\n    <img className=\"button popup__close\"\r\n         onClick={props.closeHandler}\r\n         src={close}\r\n         alt=\"Закрыть\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ButtonClose;\r\n","import React from \"react\";\r\nimport ButtonClose from './ButtonClose';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  function handleClick(evt) {\r\n    evt.preventDefault();\r\n    console.log('Упс...! Пожалуйста, просто закройте попап. Он временно не работает');\r\n  }\r\n  return (\r\n    <div className={`popup popup__closed popup__${props.name} ${(props.isOpen) ? \"popup_opened\" : \"\"}`}>\r\n      <div className=\"popup__container\">\r\n        <ButtonClose closeHandler={props.onClose}/>\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        <form className=\"popup__form popup__form-avatar\" name={props.name} noValidate>\r\n          {props.children} {/*Здесь вставка из App.js*/}\r\n          <button type=\"submit\" className=\"button popup__button\" onClick={handleClick}>{props.submitName} </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"popup__overlay\" onClick={props.onClose}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\nimport ButtonClose from \"./ButtonClose\";\r\n\r\n/*Попап с картинкой*/\r\n\r\nfunction PopupWithImage(props) {\r\n\r\n  const card = props.card;\r\n  if(!card) return null;\r\n\r\n  return (\r\n    <div className={`popup popup__closed popup__zoom-card ${props.isOpen  ? \"popup_opened\" : \"\"}`}>\r\n      <div className=\"popup__zoom\">\r\n        <img\r\n          src={`${card.link}`}\r\n          alt={card.name}\r\n          className=\"popup__image\"/>\r\n        <ButtonClose closeHandler={props.onClose}/>\r\n        <h2 className=\"popup__card-name\">{card.name}</h2>\r\n      </div>\r\n      <div className=\"popup__overlay\" onClick={props.onClose}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithImage;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport PopupWithImage from \"./PopupWithImage\";\n\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState('');\n\n  /*\n   function handleEditAvatarClick() {\n     document.querySelector('.popup__edit-avatar').classList.toggle('popup_opened');\n   }\n   function handleEditProfileClick() {\n     document.querySelector('.popup__edit-profile').classList.toggle('popup_opened');\n   }\n   function handleAddPlaceClick() {\n     document.querySelector('.popup__add-card').classList.toggle('popup_opened');\n   }*/\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleDeleteCardClick() {\n    setIsConfirmPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard('');\n  }\n\n  React.useEffect(() => {\n    const handleEsc = (evt) => {\n      if (evt.key === 'Escape') {\n        closeAllPopups()\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, []);\n\n  return (\n    <>\n      <Header/>\n      <Main onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddCard={handleAddCardClick}\n            onCardClick={handleCardClick}\n            onDeleteCardClick={handleDeleteCardClick}/>\n      <Footer/>\n\n      {/*/!*Обновить аватар*!/*/}\n      <PopupWithForm\n        name=\"avatar\"\n        title=\"Обновить аватар\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        submitName=\"Сохранить\"\n      >\n        <label className=\"popup__form-field\">\n          <input className=\"popup__input popup__input_avatar-link\"\n                 id=\"link-avatar\"\n                 name=\"avatar\"\n                 placeholder=\"Ссылка на картинку\"\n                 required\n                 type=\"url\"\n          />\n          {/*<span className=\"popup__error\" id=\"link-avatar-error\"/>*/}\n        </label>\n\n      </PopupWithForm>\n\n      {/*  /!*Редактировать профиль*!/*/}\n      <PopupWithForm\n        name=\"profile\"\n        title=\"Редактировать профиль\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        submitName=\"Сохранить\"\n      >\n\n        <label className=\"popup__form-field\">\n          <input className=\"popup__input popup__input_user-name\"\n                 id=\"name\"\n                 maxLength=\"40\"\n                 name=\"name\"\n                 pattern=\"[A-Za-zА-Яа-яЁё]*[A-Za-zА-Яа-яЁё]+[A-Za-zА-Яа-яЁё\\s\\-]*[A-Za-zА-Яа-яЁё]+[A-Za-zА-Яа-яЁё\\s]*\"\n                 placeholder=\"Имя\"\n                 type=\"text\"\n                 required\n          />\n          {/*<span className=\"popup__error\" id=\"name-error\"/>*/}\n        </label>\n        <label className=\"popup__form-field\">\n          <input className=\"popup__input popup__input_user-about\"\n                 id=\"about\"\n                 maxLength=\"200\"\n                 minLength=\"2\"\n                 name=\"about\"\n                 placeholder=\"О себе\"\n                 type=\"text\"\n                 required\n          />\n          {/*<span className=\"popup__error\" id=\"about-error\"/>*/}\n        </label>\n      </PopupWithForm>\n\n      {/*/!*Добавить карточку*!/*/}\n      <PopupWithForm\n        name=\"addCard\"\n        title=\"Новое место\"\n        isOpen={isAddCardPopupOpen}\n        onClose={closeAllPopups}\n        submitName=\"Создать\"\n      >\n        <label className=\"popup__form-field\">\n          <input className=\"popup__input popup__input_new-card\"\n                 id=\"name-card\"\n                 maxLength=\"30\"\n                 minLength=\"2\"\n                 name=\"title\"\n                 placeholder=\"Название\" required type=\"text\"/>\n          {/*<span className=\"popup__error\" id=\"name-card-error\"></span>*/}\n        </label>\n        <label className=\"popup__form-field\">\n          <input className=\"popup__input popup__input_new-card-link\"\n                 id=\"link\"\n                 name=\"src\"\n                 placeholder=\"Ссылка на картинку\"\n                 required type=\"url\"/>\n          {/*<span className=\"popup__error\" id=\"link-error\"></span>*/}\n        </label>\n\n      </PopupWithForm>\n\n      {/*/!*Попап \"Вы уверены?\"*!/*/}\n      <PopupWithForm\n        name=\"areYouSure\"\n        title=\"Вы уверены?\"\n        isOpen={isConfirmPopupOpen}\n        onClose={closeAllPopups}\n        submitName=\"Да\"\n      >\n      </PopupWithForm>\n\n      <PopupWithImage\n        card={selectedCard}\n        isOpen={selectedCard}\n        onClose={closeAllPopups}\n      />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}